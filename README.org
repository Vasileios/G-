#+Title: G++ openGL and GLUT frameworks

#+HTML_HEAD: <style type="text/css">.example {background-color: #000000; color: #000000;}</style>
#+HTML_HEAD: <style>pre.src {background-color: #000000; color: #e5e5e5;}</style>
#+HTML_HEAD: <style type="text/css">.example {background-color: #000000; color: #000000; color: #e5e5e5;}</style>

This is a core graphics example by Michael J. Norton <[[http://www.macdevcenter.com/pub/a/mac/2005/04/01/opengl.html%0A][link]]>

I have rebuilt this on Emacs 25.3 (9.0) and g++
c++/4.2.1
Apple LLVM version 9.0.0 (clang-900.0.39.2)
Target: x86_64-apple-darwin17.2.0

The files are:

 - GlutExample.c

 - makefile

Open GlutExample.c file on emacs and hit =C-x c= to build the program.

To make sure that =C-x c= can do the job put this in your .emacs.d
file:

#+BEGIN_SRC emacs-lisp
(global-set-key "\C-xc" 'compile)
 (setq make-backup-files 'nil)
 (setq text-mode-hook 'turn-on-auto-fill)
 (setq auto-mode-alist (cons '("\\.cxx$" . c++-mode) auto-mode-alist))
 (setq auto-mode-alist (cons '("\\.hpp$" . c++-mode) auto-mode-alist))
 (setq auto-mode-alist (cons '("\\.tex$" . latex-mode) auto-mode-alist))
#+END_SRC

*Note for makefile*

The makefile tells how to compile
and link a program.
A makefile uses rules with the following shape:

#+BEGIN_QUOTE
target … : dependency1 dependency2 …
       
<tab>  command
        
<tab>  …
        
<tab>  …

#+END_QUOTE

*Remember to add a TAB character before the command part)*

*Make sure that you use an editor (EMACS) that uses =tab= and doesn't convert =tab= into empty spaces (______).*

For more details see [[https://www.gnu.org/software/make/manual/make.html#Introduction][here]]

The use of =variables=  such as =LIBPATH= (the path for the libraries
of the two frameworks (openGL and GLUT)), =FRAMEWORK= (the framework
to use),
=COMPILERFLAGS= (compiler's flags), =CC= (compiler) etc.  make makefiles simpler.

The compilation phase (converting the source files into object files)
using flags.
In this makefile, used with the make build automation tool, we create an
object file corresponding to the .c file. Then the object files must be linked together to produce the new executable programm. 

=makefile=

#+BEGIN_SRC makefile
LIBPATH += -L"/System/Library/Frameworks/OpenGL.framework/Libraries"

FRAMEWORK = -framework GLUT
FRAMEWORK += -framework OpenGL

COMPILERFLAGS = -Wall
CC = g++
CFLAGS = $(COMPILERFLAGS)
LIBRARIES = -lGL -lGLU -lm -lobjc -lstdc++

OBJECTS = GlutExample.o
All: GlutExample

GlutExample: GlutExample.o $(OBJECTS)
	$(CC) $(FRAMEWORK) $(CFLAGS) -o $@ $(LIBPATH) $(OBJECTS) $(LIBRARIES)

	./GlutExample

#+END_SRC
